

윈도우 키 -> \\604-t ->
윈도우 키 -> \\604-t -> ★리액트 주말반(김영임강사)

9:30분시작  50분수업에 10분휴식  12:20분 점심식사

https://developer.mozilla.org/ko/docs/Glossary/AJAX

서버구성
ㄴnodejs 서버구성 명령어 server.js
 ㄴ통신을 server/client 처리할때
   client서비스사용하는 입장 react문법 적응
   server서비스제공하는 입장 서버nodejs/DB쿼리문/통신 

데이터베이스 베이스 언어 SQL = structured query language
DML - Data Manipulation Lang. 조작
	select	- 데이터 검색
	insert	- 데이터 삽입
	update	- 데이터 수정
	delete	- 데이터 삭제
DDL - Data Definition Lang. 정의 
	Create	- 생성
	Alter	- 수정
	Drop	- 삭제
*-------------------------------------------------------------
*-------------------------------------------------------------
윈도우 키 -> \\604-t ->
윈도우 키 -> \\604-t -> ★리액트 주말반(김영임강사)

첫번째 카카오서버 마지막 수정

drop table react_boardreply;
create table react_boardReply (
   num int auto_increment primary key,
   writer varchar(10) not null,
   memo varchar(20) not null, 
   board_id int,
   reg_date timestamp default now(),
   foreign key(board_id) references react_board(id) on delete cascade
);

commit ;
desc  react_boardreply ;



순서1] 
https://www.mysql.com
https://www.mysql.com/downloads/
 ㄴ하단 MySQL Community (GPL) Downloads클릭 
 ㄴ왼쪽 MySQL Community Server클릭 
 ㄴ8.0.41버젼 기본선택  ▼(현재변경됨  9.2.0 Innovation선택금지)
 ㄴ돌고래 하단에 Go to Download Page >


kakaoserver폴더생성 nodejs문법으로 쿼리문작성
  ㄴ Cross-Origin Resource Sharing(CORS) & axios
kakaoclient플젝 리액트구현 form태그 

kakaoserver폴더생성 nodejs문법으로 쿼리문작성
  ㄴ Cross-Origin Resource Sharing(CORS) & axios
  ㄴ npm  i  
  ㄴ npm  i  express
  ㄴ npm  i  mysql 
  ㄴ npm  i  mysql2
  ㄴ npm  i  axios
  ㄴ npm  i  cors
  ㄴ npm  i  json
  ㄴ npm  i  nodemon
  package.json문서에 기록됨


kakaoclient플젝생성 
  ㄴ npm  i  axios
  ㄴ npm i react-icons 
  ㄴ npm install react-bootstrap bootstrap 
  ㄴ npm install --save  react-router-dom  


index.js문서보다는 server.js 권장 사용 
kakaoserver서버단 구성후 실행
C:\Mtest\kakaoserver> npm start  추천
C:\Mtest\kakaoserver> node server.js
C:\Mtest\kakaoserver> npm run dev 







윈도우버튼 cmd입력
C:\Users\Administrator> cd\
C:\> cd Mtest
C:\Mtest> cls
C:\Mtest> npx create-react-app  kakaoclient
C:\Mtest> cd kakaoclient
C:\Mtest\kakaoclient>  npm install web-vitals   
C:\Mtest\kakaoclient>  npm start 


mysql-installer-community-8.0.41.0.msi파일선택해서 더블클릭실행

윈도우버튼 mysql 
Enter password: 1234

mysql> system cls;  
mysql> select lpad('7890', 15, '*');  
mysql> select rpad('7890', 15, '*');
mysql> select replace('JACK', 'J', 'BL');     --BLACK출력
mysql> select date_format(sysdate(), '%Y');   
mysql> select str_to_date('29 01 2025', '%d %m %Y'); 
mysql> system cls; 

mysql> select cast('12.3123' as decimal(10,1))  as cast ;  --12.3출력
mysql> select  round('12.3123'  ,1 ) as cast ;

mysql> select  sysdate() ;      
mysql> select  current_time() ;   
mysql> select  now() ;   

mysql> show databases;
mysql> create database naver ;
mysql> commit ;
mysql> use naver ;
mysql> show tables ;
mysql> drop table test  ; ----에러발생

mysql> create table test (
        num int(4) not null auto_increment primary key ,
        name varchar(10) not null 
       );

mysql> commit ;
mysql> show tables ;
mysql> desc test ;

mysql> drop table test  ;
mysql> create table test ( 
        code int(4)  primary key ,
	name varchar(10) not null 
       );

mysql> show tables ;
mysql> desc test ;
mysql>
 insert into  test(code, name) values( 7700 , 'kim') ;
 insert into  test(code, name) values( 8800 , 'lee') ;
 insert into  test(code, name) values( 9900 , 'goo') ;

mysql> select * from  test ; ----전체데이터 확인

문제1] 3300사번, 길동 한건등록입니다  SQL문장에서 문자는  싱글따옴표시
mysql> insert into test(code,name) values( 3300, '길동' ); 

mysql> select * from  test ; ----전체데이터 확인
mysql> select code, name from test ;  ----code,name열컬럼필드
mysql> select * from  test where code = 7700 ;
mysql> select * from  test where name = kim ; ----에러발생
mysql> select * from  test where name = 'kim' ; ----에러해결
mysql> select * from test order by code desc ;  ----코드역순
mysql> system cls;  

mysql> insert into test(code,name) values(5566,'cho');  ----등록
mysql> select * from  test ;  --전체조회
mysql> select * from  test where code = 9900 ;  --한건조회

----수정update set  삭제처리 delete 
mysql> update test  set name = 'john' ; ----단점은 전부 이름이 john
mysql> select * from  test ; 
mysql> update test  set name = 'shin' where code = 7700 ; 
mysql> select * from  test ; 
mysql> update test  set name = 'dan' where code = 9900 ; 
mysql> commit ;
mysql>
mysql> select * from  test ; 
mysql> delete * from  test  ; ----문법에러 
mysql> delete  from   test where code = 9900 ;  
mysql> select * from  test ; 
mysql> delete  from   test where name = 'lee' ; 
mysql> commit ;
mysql> select * from  test ; 




drop table react_boardreply;
drop table react_board;
create table react_board(
    id int auto_increment primary key,
    title varchar(20),
    name varchar(30),
    content varchar(30),
    wdate timestamp default now()
);

insert into react_board(title, name, content) values('spring', 'kim', 'one');
insert into react_board(title, name, content) values('summer', 'lee', 'two');
insert into react_board(title, name, content) values('winter', 'park', 'three');
commit;

select * from react_board;
commit;
desc react_board ;

//댓글 테이블 
drop table react_boardreply;
create table react_boardReply (
   num int auto_increment primary key,
   writer varchar(10) not null,
   memo varchar(20) not null, 
   board_id int,
   reg_date timestamp default now(),
   foreign key(board_id) references react_board(id) on delete cascade
);

commit ;
desc  react_boardReply ;





*-------------------------------------------------------------
2월8일 토요일(3회차 리액트 수업)
day0125
 ㄴnode_modules
 ㄴpublic
 ㄴsrc
   ㄴcomponents
   ㄴ언급data/data.js문서를 어떻게 App.js에서 호출연결하느냐?
   ㄴApp.js 
 ㄴpackage.json


<div>
   OOO.jsx<br></br>
</div>

~\day0125> npm install axios
~\day0125> npm install react-bootstrap  bootstrap 

학원에서 가져갈때 node_modules폴더 빼고 복붙
집에서 npm start 실행했더니 에러발생

~\day0125> npm install
  node_modules폴더를 다시 생성

//components/BoardWrite.jsx
import axios from 'axios';
import React, { useState } from 'react'
import { Row, Col, Form, Button } from 'react-bootstrap'
import 'bootstrap/dist/css/bootstrap.min.css';

return (
<Row className='my-5'>
            <Col className='p-5'>
                <h1 className='text-center my-5 text-primary' >게시글 작성</h1>
                <Form>
                    <h4 className='text-success'> 제목</h4><Form.Control placeholder='제목을 입력하세요.'
                        className='my-3' name='title' value={title} onChange={onChange} />

                    <h4 className='text-info'> 작성자</h4><Form.Control placeholder='작성자를 입력하세요.'
                        className='my-3' name='writer' value={writer} onChange={onChange} />

                    <h4 className='text-primary'> 내용</h4><Form.Control as='textarea' rows={10} placeholder='내용을 입력하세요.'
                        className='my-3' name='contents' value={contents} onChange={onChange} />

                    <div className='text-center'>
                        <Button className='mx-2 px-3 btn-sm' variant="primary" onClick={onSubmit} style={{ marginRight: '10px' }}>저장</Button>
                        <Button className='mx-2 px-3 btn-sm' variant="success" onClick={onReset} >초기화</Button>
                    </div>
                </Form>
            </Col>
        </Row>
)


//참고 부트스트랩
  <button> button </button> 
    <button class="btn btn-primary"> primary </button> 
    <button class="btn btn-success"> success </button> 
    <button class="btn btn-info"> info </button> 
    <button class="btn btn-warning"> warning </button> 
    <button class="btn btn-danger"> danger </button> 
    <button class="btn btn-secondary"> secondary </button> 
    <button class="btn btn-dark"> dark </button> 
    <button class="btn btn-light"> light </button> 
    <br>

    <button class="btn btn-outline-primary"> primary </button> 
    <button class="btn btn-outline-success"> success </button> 
    <button class="btn btn-outline-info"> info </button> 
    <button class="btn btn-outline-warning"> warning </button> 
    <button class="btn btn-outline-danger"> danger </button> 
    <button class="btn btn-outline-secondary"> secondary </button> 


 text-primary, text-success, text-danger 등은 Bootstrap의 텍스트 색상 클래스입니다.
 text-primary: 파란색
 text-success: 초록색
 text-danger: 빨간색
 text-warning: 주황색
 text-info: 하늘색
 text-secondary: 회색
 font-weight-bold: 텍스트를 굵게 표시합니다.
 font-italic: 텍스트를 기울임꼴로 표시합니다.
 small 태그는 제목에 작은 글씨를 추가할 때 사용합니다.
 

    <p></p> <br>
    <button class="btn btn-primary btn-lg"> 보내기 </button> 
    <button class="btn btn-primary"> 보내기 </button> 
    <button class="btn btn-primary btn-sm"> 보내기 </button> 

    <p></p> <br>
    <a href="#"  class="btn btn-primary">네이버구글</a>
    <a href="#"  class="btn btn-success">카카오아마존</a>

    <p></p> <br>
    <button class="btn btn-warning btn-lg"> 보내기 </button> 
    <button class="btn btn-warning"> 보내기 </button> 
    <button class="btn btn-warning btn-sm"> 보내기 </button> 



첫째주 리액트 문법  
리액트 function (){ } const 이름 = {} useState
리액트 초장기 시작 버젼 class기반 구현 라이프사이클
 ex) 처음로드시, 시간간격, 버튼클릭,이미지클릭, 입력란변환 


image source width  height alter
<img  src='./data/hy.png' width='250' height='70' alt='수선화' >

  <HeroList  retheroList = {hero}  />





